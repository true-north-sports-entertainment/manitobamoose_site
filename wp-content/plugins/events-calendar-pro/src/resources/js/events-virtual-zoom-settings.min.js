/**
 * This JS file was auto-generated via Terser.
 *
 * Contributors should avoid editing this file, but instead edit the associated
 * non minified file file. For more information, check out our engineering docs
 * on how we handle JS minification in our engineering docs.
 *
 * @see: https://evnt.is/dev-docs-minification
 */

tribe.events=tribe.events||{},tribe.events.zoomSettingsAdmin=tribe.events.zoomSettingsAdmin||{},function($,obj){obj.selectors={authorizedClass:"tribe-zoom-authorized",clientIdInput:"#zoom-application__client-id",clientSecretInput:"#zoom-application__client-secret",refreshAccount:".tribe-settings-zoom-account-details__account-refresh",accountStatus:".tribe-events-virtual-meetings-zoom-settings-switch__input.account-status",deleteAccount:".tribe-settings-zoom-account-details__delete-account",accountDetailsContainer:".tribe-settings-zoom-account-details",accountMessageContainer:".tec-zoom-accounts-messages",virtualContainer:"#tribe-settings-zoom-application",zoomToken:"#tribe-field-zoom_token"},obj.handleConnectButton=function(){const data={action:"events_virtual_meetings_zoom_autosave_client_keys",clientId:$(obj.selectors.clientIdInput).val(),clientSecret:$(obj.selectors.clientSecretInput).val(),security:$(obj.selectors.virtualContainer).attr("data-nonce")};$.ajax({type:"post",url:ajaxurl,dataType:"text/html",data:data}).always(obj.swapConnectButton)},obj.swapConnectButton=function(response){if(void 0===response.responseText)return;const html=response.responseText;$(obj.selectors.zoomToken).find(".tribe-field-wrap").html(html)},obj.bindEvents=function(){$(obj.selectors.virtualContainer).hasClass(obj.selectors.authorizedClass)||$(obj.selectors.virtualContainer).on("click",obj.selectors.refreshAccount,obj.handleRefreshAccount).on("click",obj.selectors.accountStatus,obj.handleAccountStatus).on("click",obj.selectors.deleteAccount,obj.handleDeleteAccount).on("blur",obj.selectors.clientIdInput,obj.handleConnectButton).on("blur",obj.selectors.clientSecretInput,obj.handleConnectButton)},obj.handleRefreshAccount=function(ev){if(ev.preventDefault(),confirm(tribe_events_virtual_settings_strings.refreshConfirm)){var url=$(this).data("zoomRefresh");window.location=url}},obj.handleAccountStatus=function(){var $this=$(this),url=$this.data("ajaxStatusUrl");$this.prop("disabled",!0),$.ajax(url,{contentType:"application/json",context:$this,success:obj.onAccountStatusSuccess})},obj.onAccountStatusSuccess=function(html){$(obj.selectors.accountMessageContainer).html(html),$(this).prop("disabled",!1);var $accountSettings=$(this).closest(obj.selectors.accountDetailsContainer);$accountSettings.find(obj.selectors.refreshAccount).prop("disabled",(function(i,v){return!v})),$accountSettings.find(obj.selectors.deleteAccount).prop("disabled",(function(i,v){return!v}))},obj.handleDeleteAccount=function(ev){if(ev.preventDefault(),confirm(tribe_events_virtual_settings_strings.deleteConfirm)){var url=$(this).data("ajaxDeleteUrl");$.ajax(url,{contentType:"application/json",context:$(this).closest(obj.selectors.accountDetailsContainer),success:obj.onAccountDeleteSuccess})}},obj.onAccountDeleteSuccess=function(html){$(obj.selectors.accountMessageContainer).html(html),$(".error",$(obj.selectors.accountMessageContainer)).length>0||$(this).remove()},obj.ready=function(){console.info("Scripts deprecated and replaced with tribe.events.apiSettingsAdmin."),obj.bindEvents()},$(obj.ready)}(jQuery,tribe.events.zoomSettingsAdmin);