/**
 * This JS file was auto-generated via Terser.
 *
 * Contributors should avoid editing this file, but instead edit the associated
 * non minified file file. For more information, check out our engineering docs
 * on how we handle JS minification in our engineering docs.
 *
 * @see: https://evnt.is/dev-docs-minification
 */

describe("Filter Toggle",(()=>{const openedFilter='\n\t\t<div class="tribe-filter-bar-c-filter tribe-filter-bar-c-filter--has-selections tribe-filter-bar-c-filter--pill tribe-filter-bar-c-filter--open">\n\t\t\t<div class="tribe-filter-bar-c-filter__toggle-wrapper">\n\t\t\t\t<button\n\t\t\t\t\tclass="tribe-filter-bar-c-filter__toggle tribe-common-h7 tribe-common-h--alt"\n\t\t\t\t\tid="toggle-id"\n\t\t\t\t\ttype="button"\n\t\t\t\t\taria-controls="container-id"\n\t\t\t\t\taria-expanded="true"\n\t\t\t\t\tdata-js="tribe-events-accordion-trigger tribe-filter-bar-c-filter-toggle"\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass="tribe-filter-bar-c-filter__container"\n\t\t\t\tid="container-id"\n\t\t\t\taria-hidden="false"\n\t\t\t\taria-labelledby="toggle-id"\n\t\t\t>\n\t\t\t</div>\n\t\t</div>\n\t',closedFilter='\n\t\t<div class="tribe-filter-bar-c-filter tribe-filter-bar-c-filter--has-selections tribe-filter-bar-c-filter--pill">\n\t\t\t<div class="tribe-filter-bar-c-filter__toggle-wrapper">\n\t\t\t\t<button\n\t\t\t\t\tclass="tribe-filter-bar-c-filter__toggle tribe-common-h7 tribe-common-h--alt"\n\t\t\t\t\tid="toggle-id"\n\t\t\t\t\ttype="button"\n\t\t\t\t\taria-controls="container-id"\n\t\t\t\t\taria-expanded="true"\n\t\t\t\t\tdata-js="tribe-events-accordion-trigger tribe-filter-bar-c-filter-toggle"\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass="tribe-filter-bar-c-filter__container"\n\t\t\t\tid="container-id"\n\t\t\t\taria-hidden="false"\n\t\t\t\taria-labelledby="toggle-id"\n\t\t\t>\n\t\t\t</div>\n\t\t</div>\n\t',openedPill='\n\t\t<div class="tribe-filter-bar-c-pill tribe-filter-bar-c-pill--button">\n\t\t\t<button\n\t\t\t\tclass="tribe-filter-bar-c-pill__pill tribe-common-b2 tribe-common-b3--min-medium"\n\t\t\t\tid="pill-toggle-id"\n\t\t\t\taria-controls="container-id"\n\t\t\t\taria-expanded="true"\n\t\t\t\tdata-js="tribe-events-accordion-trigger tribe-filter-bar-filters-slide-pill"\n\t\t\t\ttype="button"\n\t\t\t>\n\t\t\t</button>\n\t\t</div>\n\t',closedPill='\n\t\t<div class="tribe-filter-bar-c-pill tribe-filter-bar-c-pill--button">\n\t\t\t<button\n\t\t\t\tclass="tribe-filter-bar-c-pill__pill tribe-common-b2 tribe-common-b3--min-medium"\n\t\t\t\tid="pill-toggle-id"\n\t\t\t\taria-controls="container-id"\n\t\t\t\taria-expanded="false"\n\t\t\t\tdata-js="tribe-events-accordion-trigger tribe-filter-bar-filters-slide-pill"\n\t\t\t\ttype="button"\n\t\t\t>\n\t\t\t</button>\n\t\t</div>\n\t';beforeAll((()=>{String.prototype.className=function(){return"string"!=typeof this&&!this instanceof String||"function"!=typeof this.replace?this:this.replace(".","")},global.tribe={},require("../filter-toggle"),tribe.events={views:{accordion:{}}}})),afterAll((()=>{delete String.prototype.className,delete global.tribe})),describe("Selectors",(()=>{test("Should match snapshot",(()=>{const selectors=JSON.stringify(tribe.filterBar.filterToggle.selectors);expect(selectors).toMatchSnapshot()}))})),describe("Open filter",(()=>{let filter,pill;beforeEach((()=>{filter=closedFilter,pill=closedPill})),test("Should return early if filter container does not have ID",(()=>{tribe.events.views.accordion.openAccordion=jest.fn();const $filterBar=$(),$filter=$(filter);expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeFalsy(),$filter.find(".tribe-filter-bar-c-filter__container").removeAttr("id"),tribe.filterBar.filterToggle.openFilter($filterBar,$filter),expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeFalsy(),expect(tribe.events.views.accordion.openAccordion.mock.calls.length).toBe(0)})),test("Should open filter",(()=>{tribe.events.views.accordion.openAccordion=jest.fn();const $filterBar=$(`\n\t\t\t\t<div\n\t\t\t\t\tclass="tribe-filter-bar tribe-filter-bar--horizontal"\n\t\t\t\t\tid="tribe-filter-bar--12345"\n\t\t\t\t\tdata-js="tribe-filter-bar"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclass="tribe-filter-bar__form"\n\t\t\t\t\t\tmethod="post"\n\t\t\t\t\t\taction=""\n\t\t\t\t\t\taria-labelledby="tribe-filter-bar__form-heading--12345"\n\t\t\t\t\t\taria-describedby="tribe-filter-bar__form-description--12345"\n\t\t\t\t\t>\n\t\t\t\t\t\t${filter}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t`),$filter=$(filter);expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeFalsy(),tribe.filterBar.filterToggle.openFilter($filterBar,$filter),expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeTruthy(),expect(tribe.events.views.accordion.openAccordion.mock.calls.length).toBe(1)})),test("Should open filter and pill toggle",(()=>{tribe.events.views.accordion.openAccordion=jest.fn();const $filterBar=$(`\n\t\t\t\t<div\n\t\t\t\t\tclass="tribe-filter-bar tribe-filter-bar--horizontal"\n\t\t\t\t\tid="tribe-filter-bar--12345"\n\t\t\t\t\tdata-js="tribe-filter-bar"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclass="tribe-filter-bar__form"\n\t\t\t\t\t\tmethod="post"\n\t\t\t\t\t\taction=""\n\t\t\t\t\t\taria-labelledby="tribe-filter-bar__form-heading--12345"\n\t\t\t\t\t\taria-describedby="tribe-filter-bar__form-description--12345"\n\t\t\t\t\t>\n\t\t\t\t\t\t${filter}\n\t\t\t\t\t\t${pill}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t`),$filter=$(filter);expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeFalsy(),tribe.filterBar.filterToggle.openFilter($filterBar,$filter),expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeTruthy(),expect(tribe.events.views.accordion.openAccordion.mock.calls.length).toBe(2)}))})),describe("Close filter",(()=>{let filter,pill;beforeEach((()=>{filter=openedFilter,pill=openedPill})),test("Should return early if filter container does not have ID",(()=>{tribe.events.views.accordion.closeAccordion=jest.fn();const $filterBar=$(),$filter=$(filter);expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeTruthy(),$filter.find(".tribe-filter-bar-c-filter__container").removeAttr("id"),tribe.filterBar.filterToggle.closeFilter($filterBar,$filter),expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeTruthy(),expect(tribe.events.views.accordion.closeAccordion.mock.calls.length).toBe(0)})),test("Should close filter",(()=>{tribe.events.views.accordion.closeAccordion=jest.fn();const $filterBar=$(`\n\t\t\t\t<div\n\t\t\t\t\tclass="tribe-filter-bar tribe-filter-bar--horizontal"\n\t\t\t\t\tid="tribe-filter-bar--12345"\n\t\t\t\t\tdata-js="tribe-filter-bar"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclass="tribe-filter-bar__form"\n\t\t\t\t\t\tmethod="post"\n\t\t\t\t\t\taction=""\n\t\t\t\t\t\taria-labelledby="tribe-filter-bar__form-heading--12345"\n\t\t\t\t\t\taria-describedby="tribe-filter-bar__form-description--12345"\n\t\t\t\t\t>\n\t\t\t\t\t\t${filter}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t`),$filter=$(filter);expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeTruthy(),tribe.filterBar.filterToggle.closeFilter($filterBar,$filter),expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeFalsy(),expect(tribe.events.views.accordion.closeAccordion.mock.calls.length).toBe(1)})),test("Should close filter and pill toggle",(()=>{tribe.events.views.accordion.closeAccordion=jest.fn();const $filterBar=$(`\n\t\t\t\t<div\n\t\t\t\t\tclass="tribe-filter-bar tribe-filter-bar--horizontal"\n\t\t\t\t\tid="tribe-filter-bar--12345"\n\t\t\t\t\tdata-js="tribe-filter-bar"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclass="tribe-filter-bar__form"\n\t\t\t\t\t\tmethod="post"\n\t\t\t\t\t\taction=""\n\t\t\t\t\t\taria-labelledby="tribe-filter-bar__form-heading--12345"\n\t\t\t\t\t\taria-describedby="tribe-filter-bar__form-description--12345"\n\t\t\t\t\t>\n\t\t\t\t\t\t${filter}\n\t\t\t\t\t\t${pill}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t`),$filter=$(filter);expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeTruthy(),tribe.filterBar.filterToggle.closeFilter($filterBar,$filter),expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeFalsy(),expect(tribe.events.views.accordion.closeAccordion.mock.calls.length).toBe(2)}))})),describe("Handle toggle click",(()=>{let event;beforeEach((()=>{event={data:{target:{}}}})),test("Should open filter",(()=>{const $filter=$(closedFilter);event.data.target.closest=()=>$filter,expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeFalsy(),tribe.filterBar.filterToggle.handleToggleClick(event),expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeTruthy()})),test("Should close filter",(()=>{const $filter=$(openedFilter);event.data.target.closest=()=>$filter,expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeTruthy(),tribe.filterBar.filterToggle.handleToggleClick(event),expect($filter.hasClass(tribe.filterBar.filterToggle.selectors.filterOpen.className())).toBeFalsy()}))})),describe("Handle close click",(()=>{test("Should close filter",(()=>{const $filter=$();$filter.closest=()=>$();const event={data:{target:{closest:()=>$filter}}},closeFilterHold=tribe.filterBar.filterToggle.closeFilter;tribe.filterBar.filterToggle.closeFilter=jest.fn(),tribe.filterBar.filterToggle.handleCloseClick(event),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(1),tribe.filterBar.filterToggle.closeFilter=closeFilterHold}))})),describe("Handle pill toggle click",(()=>{let closeFilterHold,openFilterHold;beforeEach((()=>{closeFilterHold=tribe.filterBar.filterToggle.closeFilter,openFilterHold=tribe.filterBar.filterToggle.openFilter,tribe.filterBar.filterToggle.closeFilter=jest.fn(),tribe.filterBar.filterToggle.openFilter=jest.fn()})),afterEach((()=>{tribe.filterBar.filterToggle.closeFilter=closeFilterHold,tribe.filterBar.filterToggle.openFilter=openFilterHold})),test("Should return early if aria-controls does not exist.",(()=>{const $pillToggle=$(closedPill).find(tribe.filterBar.filterToggle.selectors.pillFilterToggle);$pillToggle.removeAttr("aria-controls");const event={data:{target:$pillToggle}};tribe.filterBar.filterToggle.handlePillToggleClick(event),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(0),expect(tribe.filterBar.filterToggle.openFilter.mock.calls.length).toBe(0)})),test("Should close the filter",(()=>{const pill=openedPill,$pillToggle=$(pill).find(tribe.filterBar.filterToggle.selectors.pillFilterToggle),$filterBar=$(`\n\t\t\t\t<div\n\t\t\t\t\tclass="tribe-filter-bar tribe-filter-bar--horizontal"\n\t\t\t\t\tid="tribe-filter-bar--12345"\n\t\t\t\t\tdata-js="tribe-filter-bar"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclass="tribe-filter-bar__form"\n\t\t\t\t\t\tmethod="post"\n\t\t\t\t\t\taction=""\n\t\t\t\t\t\taria-labelledby="tribe-filter-bar__form-heading--12345"\n\t\t\t\t\t\taria-describedby="tribe-filter-bar__form-description--12345"\n\t\t\t\t\t>\n\t\t\t\t\t\t${openedFilter}\n\t\t\t\t\t\t${pill}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t`);$pillToggle.closest=()=>$filterBar;const event={data:{target:$pillToggle}};tribe.filterBar.filterToggle.handlePillToggleClick(event),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(1),expect(tribe.filterBar.filterToggle.openFilter.mock.calls.length).toBe(0)})),test("Should open the filter",(()=>{const pill=closedPill,$pillToggle=$(pill).find(tribe.filterBar.filterToggle.selectors.pillFilterToggle),$filterBar=$(`\n\t\t\t\t<div\n\t\t\t\t\tclass="tribe-filter-bar tribe-filter-bar--horizontal"\n\t\t\t\t\tid="tribe-filter-bar--12345"\n\t\t\t\t\tdata-js="tribe-filter-bar"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclass="tribe-filter-bar__form"\n\t\t\t\t\t\tmethod="post"\n\t\t\t\t\t\taction=""\n\t\t\t\t\t\taria-labelledby="tribe-filter-bar__form-heading--12345"\n\t\t\t\t\t\taria-describedby="tribe-filter-bar__form-description--12345"\n\t\t\t\t\t>\n\t\t\t\t\t\t${closedFilter}\n\t\t\t\t\t\t${pill}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t`);$pillToggle.closest=()=>$filterBar;const event={data:{target:$pillToggle}};tribe.filterBar.filterToggle.handlePillToggleClick(event),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(1),expect(tribe.filterBar.filterToggle.openFilter.mock.calls.length).toBe(1)}))})),describe("Handle resize",(()=>{let closeFilterHold,$filterBar,$container;beforeEach((()=>{closeFilterHold=tribe.filterBar.filterToggle.closeFilter,tribe.filterBar.filterToggle.closeFilter=jest.fn();$filterBar=$(`\n\t\t\t\t<div\n\t\t\t\t\tclass="tribe-filter-bar tribe-filter-bar--horizontal"\n\t\t\t\t\tid="tribe-filter-bar--12345"\n\t\t\t\t\tdata-js="tribe-filter-bar"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclass="tribe-filter-bar__form"\n\t\t\t\t\t\tmethod="post"\n\t\t\t\t\t\taction=""\n\t\t\t\t\t\taria-labelledby="tribe-filter-bar__form-heading--12345"\n\t\t\t\t\t\taria-describedby="tribe-filter-bar__form-description--12345"\n\t\t\t\t\t>\n\t\t\t\t\t\t${openedFilter}\n\t\t\t\t\t\t${openedPill}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t`),$container=$("<div></div>"),$container.find=()=>$filterBar})),afterEach((()=>{tribe.filterBar.filterToggle.closeFilter=closeFilterHold})),test("Should close all filters on resize from mobile to desktop",(()=>{$filterBar.data("tribeEventsState",{filterToggleDesktopInitialized:!1}),$container.data("tribeEventsState",{isMobile:!1});const event={data:{container:$container}};expect($filterBar.data("tribeEventsState")).toMatchSnapshot(),tribe.filterBar.filterToggle.handleResize(event),expect($filterBar.data("tribeEventsState")).toMatchSnapshot(),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(1)})),test("Should not close filters on resize from desktop to mobile",(()=>{$filterBar.data("tribeEventsState",{filterToggleDesktopInitialized:!0}),$container.data("tribeEventsState",{isMobile:!0});const event={data:{container:$container}};expect($filterBar.data("tribeEventsState")).toMatchSnapshot(),tribe.filterBar.filterToggle.handleResize(event),expect($filterBar.data("tribeEventsState")).toMatchSnapshot(),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(0)})),test("Should not close filters on resize from mobile to mobile",(()=>{$filterBar.data("tribeEventsState",{filterToggleDesktopInitialized:!1}),$container.data("tribeEventsState",{isMobile:!0});const event={data:{container:$container}};expect($filterBar.data("tribeEventsState")).toMatchSnapshot(),tribe.filterBar.filterToggle.handleResize(event),expect($filterBar.data("tribeEventsState")).toMatchSnapshot(),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(0)})),test("Should not close filters on resize from desktop to desktop",(()=>{$filterBar.data("tribeEventsState",{filterToggleDesktopInitialized:!0}),$container.data("tribeEventsState",{isMobile:!1});const event={data:{container:$container}};expect($filterBar.data("tribeEventsState")).toMatchSnapshot(),tribe.filterBar.filterToggle.handleResize(event),expect($filterBar.data("tribeEventsState")).toMatchSnapshot(),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(0)}))})),describe("Handle click",(()=>{let closeFilterHold,filterBar,$filterBar,$container;beforeEach((()=>{closeFilterHold=tribe.filterBar.filterToggle.closeFilter,tribe.filterBar.filterToggle.closeFilter=jest.fn(),filterBar=`\n\t\t\t\t<div\n\t\t\t\t\tclass="tribe-filter-bar tribe-filter-bar--horizontal"\n\t\t\t\t\tid="tribe-filter-bar--12345"\n\t\t\t\t\tdata-js="tribe-filter-bar"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclass="tribe-filter-bar__form"\n\t\t\t\t\t\tmethod="post"\n\t\t\t\t\t\taction=""\n\t\t\t\t\t\taria-labelledby="tribe-filter-bar__form-heading--12345"\n\t\t\t\t\t\taria-describedby="tribe-filter-bar__form-description--12345"\n\t\t\t\t\t>\n\t\t\t\t\t\t${openedFilter}\n\t\t\t\t\t\t<div class="tribe-filter-bar__filters-slider-container">\n\t\t\t\t\t\t\t<div class="tribe-filter-bar__filters-slider-wrapper">\n\t\t\t\t\t\t\t\t<div class="tribe-filter-bar__filters-slide">\n\t\t\t\t\t\t\t\t\t${openedPill}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t`,$filterBar=$(filterBar),$container=$("<div></div>"),$container.find=()=>$filterBar})),afterEach((()=>{tribe.filterBar.filterToggle.closeFilter=closeFilterHold})),test("Should return early if mobile",(()=>{$container.data("tribeEventsState",{isMobile:!0});const event={data:{container:$container}};tribe.filterBar.filterToggle.handleClick(event),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(0)})),test("Should not close filters if click target parent is filter",(()=>{document.body.innerHTML=filterBar,$container.data("tribeEventsState",{isMobile:!1});const event={target:$filterBar.find(tribe.filterBar.filterToggle.selectors.filterContainer)[0],data:{container:$container}};tribe.filterBar.filterToggle.handleClick(event),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(0)})),test("Should not close filters if click target parent is filter slider",(()=>{document.body.innerHTML=filterBar,$container.data("tribeEventsState",{isMobile:!1});const event={target:$filterBar.find(tribe.filterBar.filterToggle.selectors.filtersSliderContainer)[0],data:{container:$container}};tribe.filterBar.filterToggle.handleClick(event),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(0)})),test("Should close filters if click target parent is neither filter nor filter slider",(()=>{document.body.innerHTML=filterBar,$container.data("tribeEventsState",{isMobile:!1});const event={target:$container[0],data:{container:$container}};tribe.filterBar.filterToggle.handleClick(event),expect(tribe.filterBar.filterToggle.closeFilter.mock.calls.length).toBe(1)}))})),describe("Initialize state",(()=>{test("Should return early if filter bar is not horizontal",(()=>{const $container=$("<div></div>");$container.data("tribeEventsState",{isMobile:!0});const $filterBar=$(`\n\t\t\t\t<div\n\t\t\t\t\tclass="tribe-filter-bar tribe-filter-bar--horizontal"\n\t\t\t\t\tid="tribe-filter-bar--12345"\n\t\t\t\t\tdata-js="tribe-filter-bar"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclass="tribe-filter-bar__form"\n\t\t\t\t\t\tmethod="post"\n\t\t\t\t\t\taction=""\n\t\t\t\t\t\taria-labelledby="tribe-filter-bar__form-heading--12345"\n\t\t\t\t\t\taria-describedby="tribe-filter-bar__form-description--12345"\n\t\t\t\t\t>\n\t\t\t\t\t\t${openedFilter}\n\t\t\t\t\t\t${openedPill}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t`);$container.find=()=>$filterBar,tribe.filterBar.filterToggle.initState($container),expect($filterBar.data("tribeEventsState")).toMatchSnapshot()})),test("Should initialize state if filter bar is horizontal",(()=>{const container='<div class="'+tribe.filterBar.filterToggle.selectors.filterBarHorizontal.className()+'"></div>',$container=$(container);$container.data("tribeEventsState",{isMobile:!0});const $filterBar=$(`\n\t\t\t\t<div\n\t\t\t\t\tclass="tribe-filter-bar tribe-filter-bar--horizontal"\n\t\t\t\t\tid="tribe-filter-bar--12345"\n\t\t\t\t\tdata-js="tribe-filter-bar"\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclass="tribe-filter-bar__form"\n\t\t\t\t\t\tmethod="post"\n\t\t\t\t\t\taction=""\n\t\t\t\t\t\taria-labelledby="tribe-filter-bar__form-heading--12345"\n\t\t\t\t\t\taria-describedby="tribe-filter-bar__form-description--12345"\n\t\t\t\t\t>\n\t\t\t\t\t\t${openedFilter}\n\t\t\t\t\t\t${openedPill}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t`);$container.find=()=>$filterBar,tribe.filterBar.filterToggle.initState($container),expect($filterBar.data("tribeEventsState")).toMatchSnapshot()}))}))}));