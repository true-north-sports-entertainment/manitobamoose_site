{
	"name": "yoast/wordpress-seo-premium",
	"description": "Improve your WordPress SEO: Write better content and have a fully optimized WordPress site using the Yoast SEO plugin.",
	"license": "GPL-2.0-or-later",
	"type": "wordpress-plugin",
	"keywords": [
		"wordpress",
		"seo"
	],
	"authors": [
		{
			"name": "Team Yoast",
			"email": "support@yoast.com",
			"homepage": "https://yoa.st/1--"
		}
	],
	"homepage": "https://yoa.st/1ui",
	"support": {
		"issues": "https://github.com/Yoast/wordpress-seo-premium/issues",
		"source": "https://github.com/Yoast/wordpress-seo-premium",
		"security": "https://yoast.com/security-program/"
	},
	"require": {
		"php": "^7.2.5 || ^8.0",
		"ext-filter": "*",
		"yoast/wordpress-seo": "^24.8"
	},
	"require-dev": {
		"wp-cli/i18n-command": "^2.6",
		"yoast/wp-test-utils": "^1.2",
		"yoast/yoastcs": "^3.1.0"
	},
	"repositories": {
		"wordpress-seo": {
			"type": "vcs",
			"url": "https://github.com/yoast/wordpress-seo"
		}
	},
	"minimum-stability": "dev",
	"prefer-stable": true,
	"autoload": {
		"classmap": [
			"classes/",
			"cli/",
			"src/",
			"premium.php"
		],
		"exclude-from-classmap": [
			"/**/node_modules/",
			"vendor/composer/installers",
			"vendor/yoast/wordpress-seo"
		]
	},
	"autoload-dev": {
		"psr-4": {
			"Yoast\\WP\\SEO\\Premium\\Tests\\": "tests/"
		},
		"classmap": [
			"config/"
		]
	},
	"config": {
		"allow-plugins": {
			"composer/installers": true,
			"dealerdirect/phpcodesniffer-composer-installer": true
		},
		"classmap-authoritative": true,
		"platform": {
			"php": "7.2.5"
		},
		"preferred-install": {
			"yoast/wordpress-seo": "source"
		}
	},
	"extra": {
		"installer-paths": {
			"vendor/{$vendor}/{$name}": [
				"type:wordpress-plugin"
			]
		}
	},
	"scripts": {
		"lint": [
			"@php ./vendor/php-parallel-lint/php-parallel-lint/parallel-lint . -e php --show-deprecated --exclude vendor --exclude node_modules --exclude .git --exclude wp-content"
		],
		"lint-files": [
			"@php ./vendor/php-parallel-lint/php-parallel-lint/parallel-lint -e php --show-deprecated"
		],
		"lint-branch": [
			"Yoast\\WP\\SEO\\Premium\\Config\\Composer\\Actions::lint_branch"
		],
		"lint-staged": [
			"Yoast\\WP\\SEO\\Premium\\Config\\Composer\\Actions::lint_staged"
		],
		"cs": [
			"Yoast\\WP\\SEO\\Premium\\Config\\Composer\\Actions::check_coding_standards"
		],
		"check-cs-thresholds": [
			"@putenv YOASTCS_THRESHOLD_ERRORS=646",
			"@putenv YOASTCS_THRESHOLD_WARNINGS=74",
			"Yoast\\WP\\SEO\\Premium\\Config\\Composer\\Actions::check_cs_thresholds"
		],
		"check-cs": [
			"@check-cs-warnings -n"
		],
		"check-cs-errors": [
			"echo You can now just use check-cs, running that command now.",
			"composer check-cs"
		],
		"check-cs-warnings": [
			"@php ./vendor/squizlabs/php_codesniffer/bin/phpcs"
		],
		"check-staged-cs": [
			"@check-cs-warnings --filter=GitStaged"
		],
		"check-branch-cs": [
			"Yoast\\WP\\SEO\\Premium\\Config\\Composer\\Actions::check_branch_cs"
		],
		"fix-cs": [
			"@php ./vendor/squizlabs/php_codesniffer/bin/phpcbf"
		],
		"test": [
			"@php ./vendor/phpunit/phpunit/phpunit --no-coverage"
		],
		"coverage": [
			"@php ./vendor/phpunit/phpunit/phpunit"
		],
		"test-wp": [
			"@php ./vendor/phpunit/phpunit/phpunit -c phpunit-wp.xml.dist --no-coverage"
		],
		"coverage-wp": [
			"@php ./vendor/phpunit/phpunit/phpunit -c phpunit-wp.xml.dist"
		],
		"integration-test": [
			"@test-wp"
		],
		"integration-coverage": [
			"@coverage-wp"
		],
		"compile-di": [
			"rm -f ./src/generated/container.php",
			"rm -f ./src/generated/container.php.meta",
			"composer du --no-scripts",
			"Yoast\\WP\\SEO\\Premium\\Config\\Composer\\Actions::compile_dependency_injection_container"
		],
		"post-install-cmd": [
			"cd vendor/yoast/wordpress-seo && composer install --no-interaction && cd ../..",
			"composer compile-di"
		],
		"i18n-free-js": [
			"wp i18n make-pot . languages/yoastseo.pot --include=\"node_modules/yoastseo/src\" --allow-root",
			"wp i18n make-pot . languages/free-js.pot --include=\"node_modules/@yoast/social-metadata-previews/src\" --domain=\"wordpress-seo\" --merge=\"languages/yoastseo.pot\" --allow-root",
			"rm languages/yoastseo.pot"
		],
		"i18n-js": [
			"wp i18n make-pot . languages/wordpress-seo-premiumjs.pot --skip-php --exclude=\"assets/js/dist\" --merge=\"languages/free-js.pot\" --headers='{\"Report-Msgid-Bugs-To\":\"https://github.com/yoast/wordpress-seo-premium/issues\"}' --allow-root",
			"rm languages/free-js.pot"
		],
		"i18n-php": [
			"wp i18n make-pot . languages/wordpress-seo-premium.pot --skip-js --exclude=\"artifact/*\" --merge=\"languages/wordpress-seo-premiumjs.pot\" --headers='{\"Report-Msgid-Bugs-To\":\"https://github.com/yoast/wordpress-seo-premium/issues\"}' --allow-root"
		]
	},
	"scripts-descriptions": {
		"lint": "Check the PHP files for parse errors.",
		"lint-files": "Internal use.",
		"lint-branch": "Check the PHP files changed in the current branch for parse errors.",
		"lint-staged": "Check the staged PHP files for parse errors.",
		"cs": "See a menu with the code style checking script options.",
		"check-cs-thresholds": "Check the PHP files for code style violations and best practices and verify the number of issues does not exceed predefined thresholds.",
		"check-cs": "Check the PHP files for code style violations and best practices, ignoring warnings.",
		"check-cs-errors": "Alias for check-cs command",
		"check-cs-warnings": "Check the PHP files for code style violations and best practices, including warnings.",
		"check-staged-cs": "Check the staged PHP files for code style violations and best practices.",
		"check-branch-cs": "Check the PHP files changed in the current branch for code style violations and best practices.",
		"fix-cs": "Auto-fix code style violations in the PHP files.",
		"test": "Run the unit tests without code coverage.",
		"coverage": "Run the unit tests with code coverage.",
		"test-wp": "Run the WP unit tests without code coverage.",
		"coverage-wp": "Run the WP unit tests with code coverage.",
		"integration-test": "Deprecated. Alias for the \"test-wp\" script.",
		"integration-coverage": "Deprecated. Alias for the \"coverage-wp\" script.",
		"compile-di": "Compile the dependency injection layer."
	}
}
